package main

import (
	"fmt"
	"syscall"
	"unsafe"
)

func main() {

	code := []byte{
		0x55, 0x48, 0x89, 0xe5, 0x48, 0x83, 0xec, 0x08,
		0x48, 0x89, 0x44, 0x24, 0x18, 0x48, 0xc7, 0x04,
		0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0xff, 0xc0,
		0x48, 0x89, 0x04, 0x24, 0x48, 0x83, 0xc4, 0x08,
		0x5d, 0xc3,
	}

	memory, err := syscall.Mmap(-1, 0, len(code), syscall.PROT_READ|syscall.PROT_WRITE|syscall.PROT_EXEC, syscall.MAP_ANON|syscall.MAP_PRIVATE)
	if err != nil {
		panic(err)
	}
	defer syscall.Munmap(memory)

	copy(memory, code)

	memory_ptr := &memory
	ptr := unsafe.Pointer(&memory_ptr)
	inc := *(*func(int) int)(ptr)

	fmt.Println(inc(13))
}
